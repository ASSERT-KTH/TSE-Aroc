Syntax trees:


======= /home/fabric/ArocRevision/Aroc/dataSet/smartbugs-21-7-13/unAnalyzedUlls/0x524960d55174d912768678d8c606b4d50b79d7b1.sol =======
PragmaDirective
   Gas costs: 0
   Source: "pragma solidity ^0.4.13;"
ContractDefinition "Centra4"
   Source: "contract Centra4 {\r\n\r\n\tfunction transfer() returns (bool) {\t\r\n\t\taddress contract_address;\r\n\t\tcontract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;\r\n\t\taddress c1;\t\t\r\n\t\taddress c2;\r\n\t\tuint256 k;\r\n\t\tk = 1;\r\n\t\t\r\n\t\tc2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\t\r\n\t\t// <yes> <report> UNCHECKED_LL_CALLS\t\r\n\t\tcontract_address.call(\"register\", \"CentraToken\");\r\n\t\tif(!contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n}"
  FunctionDefinition "transfer" - public
     Source: "function transfer() returns (bool) {\t\r\n\t\taddress contract_address;\r\n\t\tcontract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;\r\n\t\taddress c1;\t\t\r\n\t\taddress c2;\r\n\t\tuint256 k;\r\n\t\tk = 1;\r\n\t\t\r\n\t\tc2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\t\r\n\t\t// <yes> <report> UNCHECKED_LL_CALLS\t\r\n\t\tcontract_address.call(\"register\", \"CentraToken\");\r\n\t\tif(!contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)) return false;\r\n\r\n\t\treturn true;\r\n\t}"
    ParameterList
       Gas costs: 0
       Source: "()"
    ParameterList
       Gas costs: 3
       Source: "(bool)"
      VariableDeclaration ""
         Type: bool
         Source: "bool"
        ElementaryTypeName bool
           Source: "bool"
    Block
       Source: "{\t\r\n\t\taddress contract_address;\r\n\t\tcontract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a;\r\n\t\taddress c1;\t\t\r\n\t\taddress c2;\r\n\t\tuint256 k;\r\n\t\tk = 1;\r\n\t\t\r\n\t\tc2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79;\t\r\n\t\t// <yes> <report> UNCHECKED_LL_CALLS\t\r\n\t\tcontract_address.call(\"register\", \"CentraToken\");\r\n\t\tif(!contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)) return false;\r\n\r\n\t\treturn true;\r\n\t}"
      VariableDeclarationStatement
         Gas costs: 3
         Source: "address contract_address"
        VariableDeclaration "contract_address"
           Type: address
           Source: "address contract_address"
          ElementaryTypeName address
             Source: "address"
      ExpressionStatement
         Gas costs: 8
         Source: "contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a"
        Assignment using operator =
           Type: address
           Source: "contract_address = 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a"
          Identifier contract_address
             Type: address
             Source: "contract_address"
          Literal, token: [no token] value: 0x96a65609a7b84e8842732deb08f56c3e21ac6f8a
             Type: int_const 8600...(40 digits omitted)...9914
             Source: "0x96a65609a7b84e8842732deb08f56c3e21ac6f8a"
      VariableDeclarationStatement
         Gas costs: 3
         Source: "address c1"
        VariableDeclaration "c1"
           Type: address
           Source: "address c1"
          ElementaryTypeName address
             Source: "address"
      VariableDeclarationStatement
         Gas costs: 3
         Source: "address c2"
        VariableDeclaration "c2"
           Type: address
           Source: "address c2"
          ElementaryTypeName address
             Source: "address"
      VariableDeclarationStatement
         Gas costs: 3
         Source: "uint256 k"
        VariableDeclaration "k"
           Type: uint256
           Source: "uint256 k"
          ElementaryTypeName uint256
             Source: "uint256"
      ExpressionStatement
         Gas costs: 8
         Source: "k = 1"
        Assignment using operator =
           Type: uint256
           Source: "k = 1"
          Identifier k
             Type: uint256
             Source: "k"
          Literal, token: [no token] value: 1
             Type: int_const 1
             Source: "1"
      ExpressionStatement
         Gas costs: 8
         Source: "c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79"
        Assignment using operator =
           Type: address
           Source: "c2 = 0xaa27f8c1160886aacba64b2319d8d5469ef2af79"
          Identifier c2
             Type: address
             Source: "c2"
          Literal, token: [no token] value: 0xaa27f8c1160886aacba64b2319d8d5469ef2af79
             Type: int_const 9714...(40 digits omitted)...9993
             Source: "0xaa27f8c1160886aacba64b2319d8d5469ef2af79"
      ExpressionStatement
         Gas costs: [???]
         Source: "contract_address.call(\"register\", \"CentraToken\")"
        FunctionCall
           Type: bool
           Source: "contract_address.call(\"register\", \"CentraToken\")"
          MemberAccess to member call
             Type: function () payable returns (bool)
             Source: "contract_address.call"
            Identifier contract_address
               Type: address
               Source: "contract_address"
          Literal, token: [no token] value: register
             Type: literal_string "register"
             Source: "\"register\""
          Literal, token: [no token] value: CentraToken
             Type: literal_string "CentraToken"
             Source: "\"CentraToken\""
      IfStatement
         Source: "if(!contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)) return false"
        UnaryOperation (prefix) !
           Type: bool
           Gas costs: [???]
           Source: "!contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)"
          FunctionCall
             Type: bool
             Source: "contract_address.call(bytes4(keccak256(\"transfer(address,uint256)\")),c2,k)"
            MemberAccess to member call
               Type: function () payable returns (bool)
               Source: "contract_address.call"
              Identifier contract_address
                 Type: address
                 Source: "contract_address"
            FunctionCall
               Type: bytes4
               Source: "bytes4(keccak256(\"transfer(address,uint256)\"))"
              ElementaryTypeNameExpression bytes4
                 Type: type(bytes4)
                 Source: "bytes4"
              FunctionCall
                 Type: bytes32
                 Source: "keccak256(\"transfer(address,uint256)\")"
                Identifier keccak256
                   Type: function () pure returns (bytes32)
                   Source: "keccak256"
                Literal, token: [no token] value: transfer(address,uint256)
                   Type: literal_string "transfer(address,uint256)"
                   Source: "\"transfer(address,uint256)\""
            Identifier c2
               Type: address
               Source: "c2"
            Identifier k
               Type: uint256
               Source: "k"
        Return
           Gas costs: 19
           Source: "return false"
          Literal, token: false value: false
             Type: bool
             Source: "false"
      Return
         Gas costs: 8
         Source: "return true"
        Literal, token: true value: true
           Type: bool
           Source: "true"
