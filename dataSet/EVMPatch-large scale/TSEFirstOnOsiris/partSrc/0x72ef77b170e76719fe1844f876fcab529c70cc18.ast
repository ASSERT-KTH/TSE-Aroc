Syntax trees:


======= /home/fabric/ArocRevision/Aroc/osirisData/contractSrc/0x72ef77b170e76719fe1844f876fcab529c70cc18.sol =======
PragmaDirective
   Gas costs: 0
   Source: "pragma solidity ^0.4.17;"
ContractDefinition "ExtendData"
   Source: "contract ExtendData {\r\n    \r\n   struct User {\r\n        bytes32 username;\r\n        bool verified;\r\n    }\r\n\r\n    modifier onlyOwners {\r\n        require(owners[msg.sender]);\r\n        _;\r\n    }\r\n\r\n    mapping(bytes32 => address) usernameToAddress;\r\n    mapping(bytes32 => address) queryToAddress;\r\n    mapping(address => mapping(bytes32 => uint)) tips;\r\n    mapping(address => mapping(bytes32 => uint)) lastTip;\r\n    mapping(bytes32 => uint) balances;\r\n    mapping(address => User) users;   \r\n    mapping(address => bool) owners;\r\n    \r\n    function ExtendData() public {\r\n        owners[msg.sender] = true;\r\n    }\r\n    \r\n    //getters\r\n    function getAddressForUsername(bytes32 _username) public constant onlyOwners returns (address) {\r\n        return usernameToAddress[_username];\r\n    }\r\n\r\n    function getAddressForQuery(bytes32 _queryId) public constant onlyOwners returns (address) {\r\n        return queryToAddress[_queryId];\r\n    }\r\n    \r\n    function getBalanceForUser(bytes32 _username) public constant onlyOwners returns (uint) {\r\n        return balances[_username];\r\n    }\r\n    \r\n    function getUserVerified(address _address) public constant onlyOwners returns (bool) {\r\n        return users[_address].verified;\r\n    }\r\n    \r\n    function getUserUsername(address _address) public constant onlyOwners returns (bytes32) {\r\n        return users[_address].username;\r\n    }\r\n\r\n    function getTip(address _from, bytes32 _to) public constant onlyOwners  returns (uint) {\r\n        return tips[_from][_to];\r\n    }\r\n  \r\n    function getLastTipTime(address _from, bytes32 _to) public constant onlyOwners returns (uint) {\r\n        return lastTip[_from][_to];\r\n    }\r\n\r\n    //setters\r\n    function setQueryIdForAddress(bytes32 _queryId, address _address) public onlyOwners {\r\n        queryToAddress[_queryId] = _address;\r\n    }\r\n   \r\n    function setBalanceForUser(bytes32 _username, uint _balance) public onlyOwners {\r\n        balances[_username] = _balance;\r\n    }\r\n \r\n    function setUsernameForAddress(bytes32 _username, address _address) public onlyOwners {\r\n        usernameToAddress[_username] = _address;\r\n    }\r\n\r\n    function setVerified(address _address) public onlyOwners {\r\n        users[_address].verified = true;\r\n    }\r\n\r\n    function addTip(address _from, bytes32 _to, uint _tip) public onlyOwners {\r\n        tips[_from][_to] += _tip;\r\n        balances[_to] += _tip;\r\n        lastTip[_from][_to] = now;     \r\n    }\r\n\r\n    function addUser(address _address, bytes32 _username) public onlyOwners {\r\n        users[_address] = User({\r\n                username: _username,\r\n                verified: false\r\n            });\r\n    }\r\n\r\n    function removeTip(address _from, bytes32 _to) public onlyOwners {\r\n        balances[_to] -= tips[_from][_to];\r\n        tips[_from][_to] = 0;\r\n    }\r\n    \r\n    //owner modification\r\n    function addOwner(address _address) public onlyOwners {\r\n        owners[_address] = true;\r\n    }\r\n    \r\n    function removeOwner(address _address) public onlyOwners {\r\n        owners[_address] = false;\r\n    }\r\n}"
  StructDefinition "User"
     Gas costs: 0
     Source: "struct User {\r\n        bytes32 username;\r\n        bool verified;\r\n    }"
    VariableDeclaration "username"
       Type: bytes32
       Source: "bytes32 username"
      ElementaryTypeName bytes32
         Source: "bytes32"
    VariableDeclaration "verified"
       Type: bool
       Source: "bool verified"
      ElementaryTypeName bool
         Source: "bool"
  ModifierDefinition "onlyOwners"
     Source: "modifier onlyOwners {\r\n        require(owners[msg.sender]);\r\n        _;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Source: "{\r\n        require(owners[msg.sender]);\r\n        _;\r\n    }"
      ExpressionStatement
         Gas costs: 5760
         Source: "require(owners[msg.sender])"
        FunctionCall
           Type: tuple()
           Source: "require(owners[msg.sender])"
          Identifier require
             Type: function (bool) pure
             Source: "require"
          IndexAccess
             Type: bool
             Source: "owners[msg.sender]"
            Identifier owners
               Type: mapping(address => bool)
               Source: "owners"
            MemberAccess to member sender
               Type: address
               Source: "msg.sender"
              Identifier msg
                 Type: msg
                 Source: "msg"
      PlaceholderStatement
         Gas costs: 0
         Source: "_"
  VariableDeclaration "usernameToAddress"
     Type: mapping(bytes32 => address)
     Gas costs: 0
     Source: "mapping(bytes32 => address) usernameToAddress"
    Mapping
       Source: "mapping(bytes32 => address)"
      ElementaryTypeName bytes32
         Source: "bytes32"
      ElementaryTypeName address
         Source: "address"
  VariableDeclaration "queryToAddress"
     Type: mapping(bytes32 => address)
     Gas costs: 0
     Source: "mapping(bytes32 => address) queryToAddress"
    Mapping
       Source: "mapping(bytes32 => address)"
      ElementaryTypeName bytes32
         Source: "bytes32"
      ElementaryTypeName address
         Source: "address"
  VariableDeclaration "tips"
     Type: mapping(address => mapping(bytes32 => uint256))
     Gas costs: 0
     Source: "mapping(address => mapping(bytes32 => uint)) tips"
    Mapping
       Source: "mapping(address => mapping(bytes32 => uint))"
      ElementaryTypeName address
         Source: "address"
      Mapping
         Source: "mapping(bytes32 => uint)"
        ElementaryTypeName bytes32
           Source: "bytes32"
        ElementaryTypeName uint
           Source: "uint"
  VariableDeclaration "lastTip"
     Type: mapping(address => mapping(bytes32 => uint256))
     Gas costs: 0
     Source: "mapping(address => mapping(bytes32 => uint)) lastTip"
    Mapping
       Source: "mapping(address => mapping(bytes32 => uint))"
      ElementaryTypeName address
         Source: "address"
      Mapping
         Source: "mapping(bytes32 => uint)"
        ElementaryTypeName bytes32
           Source: "bytes32"
        ElementaryTypeName uint
           Source: "uint"
  VariableDeclaration "balances"
     Type: mapping(bytes32 => uint256)
     Gas costs: 0
     Source: "mapping(bytes32 => uint) balances"
    Mapping
       Source: "mapping(bytes32 => uint)"
      ElementaryTypeName bytes32
         Source: "bytes32"
      ElementaryTypeName uint
         Source: "uint"
  VariableDeclaration "users"
     Type: mapping(address => struct ExtendData.User storage ref)
     Gas costs: 0
     Source: "mapping(address => User) users"
    Mapping
       Source: "mapping(address => User)"
      ElementaryTypeName address
         Source: "address"
      UserDefinedTypeName "User"
         Source: "User"
  VariableDeclaration "owners"
     Type: mapping(address => bool)
     Gas costs: 0
     Source: "mapping(address => bool) owners"
    Mapping
       Source: "mapping(address => bool)"
      ElementaryTypeName address
         Source: "address"
      ElementaryTypeName bool
         Source: "bool"
  FunctionDefinition "ExtendData" - public
     Source: "function ExtendData() public {\r\n        owners[msg.sender] = true;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "()"
    ParameterList
       Gas costs: 0
       Source: ""
    Block
       Source: "{\r\n        owners[msg.sender] = true;\r\n    }"
      ExpressionStatement
         Gas costs: 0
         Source: "owners[msg.sender] = true"
        Assignment using operator =
           Type: bool
           Source: "owners[msg.sender] = true"
          IndexAccess
             Type: bool
             Source: "owners[msg.sender]"
            Identifier owners
               Type: mapping(address => bool)
               Source: "owners"
            MemberAccess to member sender
               Type: address
               Source: "msg.sender"
              Identifier msg
                 Type: msg
                 Source: "msg"
          Literal, token: true value: true
             Type: bool
             Source: "true"
  FunctionDefinition "getAddressForUsername" - public - const
     Source: "function getAddressForUsername(bytes32 _username) public constant onlyOwners returns (address) {\r\n        return usernameToAddress[_username];\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _username)"
      VariableDeclaration "_username"
         Type: bytes32
         Source: "bytes32 _username"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 3
       Source: "(address)"
      VariableDeclaration ""
         Type: address
         Source: "address"
        ElementaryTypeName address
           Source: "address"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return usernameToAddress[_username];\r\n    }"
      Return
         Gas costs: 346
         Source: "return usernameToAddress[_username]"
        IndexAccess
           Type: address
           Source: "usernameToAddress[_username]"
          Identifier usernameToAddress
             Type: mapping(bytes32 => address)
             Source: "usernameToAddress"
          Identifier _username
             Type: bytes32
             Source: "_username"
  FunctionDefinition "getAddressForQuery" - public - const
     Source: "function getAddressForQuery(bytes32 _queryId) public constant onlyOwners returns (address) {\r\n        return queryToAddress[_queryId];\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _queryId)"
      VariableDeclaration "_queryId"
         Type: bytes32
         Source: "bytes32 _queryId"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 3
       Source: "(address)"
      VariableDeclaration ""
         Type: address
         Source: "address"
        ElementaryTypeName address
           Source: "address"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return queryToAddress[_queryId];\r\n    }"
      Return
         Gas costs: 346
         Source: "return queryToAddress[_queryId]"
        IndexAccess
           Type: address
           Source: "queryToAddress[_queryId]"
          Identifier queryToAddress
             Type: mapping(bytes32 => address)
             Source: "queryToAddress"
          Identifier _queryId
             Type: bytes32
             Source: "_queryId"
  FunctionDefinition "getBalanceForUser" - public - const
     Source: "function getBalanceForUser(bytes32 _username) public constant onlyOwners returns (uint) {\r\n        return balances[_username];\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _username)"
      VariableDeclaration "_username"
         Type: bytes32
         Source: "bytes32 _username"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 3
       Source: "(uint)"
      VariableDeclaration ""
         Type: uint256
         Source: "uint"
        ElementaryTypeName uint
           Source: "uint"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return balances[_username];\r\n    }"
      Return
         Gas costs: 310
         Source: "return balances[_username]"
        IndexAccess
           Type: uint256
           Source: "balances[_username]"
          Identifier balances
             Type: mapping(bytes32 => uint256)
             Source: "balances"
          Identifier _username
             Type: bytes32
             Source: "_username"
  FunctionDefinition "getUserVerified" - public - const
     Source: "function getUserVerified(address _address) public constant onlyOwners returns (bool) {\r\n        return users[_address].verified;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 3
       Source: "(bool)"
      VariableDeclaration ""
         Type: bool
         Source: "bool"
        ElementaryTypeName bool
           Source: "bool"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return users[_address].verified;\r\n    }"
      Return
         Gas costs: 346
         Source: "return users[_address].verified"
        MemberAccess to member verified
           Type: bool
           Source: "users[_address].verified"
          IndexAccess
             Type: struct ExtendData.User storage ref
             Source: "users[_address]"
            Identifier users
               Type: mapping(address => struct ExtendData.User storage ref)
               Source: "users"
            Identifier _address
               Type: address
               Source: "_address"
  FunctionDefinition "getUserUsername" - public - const
     Source: "function getUserUsername(address _address) public constant onlyOwners returns (bytes32) {\r\n        return users[_address].username;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 3
       Source: "(bytes32)"
      VariableDeclaration ""
         Type: bytes32
         Source: "bytes32"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return users[_address].username;\r\n    }"
      Return
         Gas costs: 310
         Source: "return users[_address].username"
        MemberAccess to member username
           Type: bytes32
           Source: "users[_address].username"
          IndexAccess
             Type: struct ExtendData.User storage ref
             Source: "users[_address]"
            Identifier users
               Type: mapping(address => struct ExtendData.User storage ref)
               Source: "users"
            Identifier _address
               Type: address
               Source: "_address"
  FunctionDefinition "getTip" - public - const
     Source: "function getTip(address _from, bytes32 _to) public constant onlyOwners  returns (uint) {\r\n        return tips[_from][_to];\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _from, bytes32 _to)"
      VariableDeclaration "_from"
         Type: address
         Source: "address _from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_to"
         Type: bytes32
         Source: "bytes32 _to"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 3
       Source: "(uint)"
      VariableDeclaration ""
         Type: uint256
         Source: "uint"
        ElementaryTypeName uint
           Source: "uint"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return tips[_from][_to];\r\n    }"
      Return
         Gas costs: 400
         Source: "return tips[_from][_to]"
        IndexAccess
           Type: uint256
           Source: "tips[_from][_to]"
          IndexAccess
             Type: mapping(bytes32 => uint256)
             Source: "tips[_from]"
            Identifier tips
               Type: mapping(address => mapping(bytes32 => uint256))
               Source: "tips"
            Identifier _from
               Type: address
               Source: "_from"
          Identifier _to
             Type: bytes32
             Source: "_to"
  FunctionDefinition "getLastTipTime" - public - const
     Source: "function getLastTipTime(address _from, bytes32 _to) public constant onlyOwners returns (uint) {\r\n        return lastTip[_from][_to];\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _from, bytes32 _to)"
      VariableDeclaration "_from"
         Type: address
         Source: "address _from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_to"
         Type: bytes32
         Source: "bytes32 _to"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 3
       Source: "(uint)"
      VariableDeclaration ""
         Type: uint256
         Source: "uint"
        ElementaryTypeName uint
           Source: "uint"
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        return lastTip[_from][_to];\r\n    }"
      Return
         Gas costs: 400
         Source: "return lastTip[_from][_to]"
        IndexAccess
           Type: uint256
           Source: "lastTip[_from][_to]"
          IndexAccess
             Type: mapping(bytes32 => uint256)
             Source: "lastTip[_from]"
            Identifier lastTip
               Type: mapping(address => mapping(bytes32 => uint256))
               Source: "lastTip"
            Identifier _from
               Type: address
               Source: "_from"
          Identifier _to
             Type: bytes32
             Source: "_to"
  FunctionDefinition "setQueryIdForAddress" - public
     Source: "function setQueryIdForAddress(bytes32 _queryId, address _address) public onlyOwners {\r\n        queryToAddress[_queryId] = _address;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _queryId, address _address)"
      VariableDeclaration "_queryId"
         Type: bytes32
         Source: "bytes32 _queryId"
        ElementaryTypeName bytes32
           Source: "bytes32"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        queryToAddress[_queryId] = _address;\r\n    }"
      ExpressionStatement
         Gas costs: 20369
         Source: "queryToAddress[_queryId] = _address"
        Assignment using operator =
           Type: address
           Source: "queryToAddress[_queryId] = _address"
          IndexAccess
             Type: address
             Source: "queryToAddress[_queryId]"
            Identifier queryToAddress
               Type: mapping(bytes32 => address)
               Source: "queryToAddress"
            Identifier _queryId
               Type: bytes32
               Source: "_queryId"
          Identifier _address
             Type: address
             Source: "_address"
  FunctionDefinition "setBalanceForUser" - public
     Source: "function setBalanceForUser(bytes32 _username, uint _balance) public onlyOwners {\r\n        balances[_username] = _balance;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _username, uint _balance)"
      VariableDeclaration "_username"
         Type: bytes32
         Source: "bytes32 _username"
        ElementaryTypeName bytes32
           Source: "bytes32"
      VariableDeclaration "_balance"
         Type: uint256
         Source: "uint _balance"
        ElementaryTypeName uint
           Source: "uint"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        balances[_username] = _balance;\r\n    }"
      ExpressionStatement
         Gas costs: 20116
         Source: "balances[_username] = _balance"
        Assignment using operator =
           Type: uint256
           Source: "balances[_username] = _balance"
          IndexAccess
             Type: uint256
             Source: "balances[_username]"
            Identifier balances
               Type: mapping(bytes32 => uint256)
               Source: "balances"
            Identifier _username
               Type: bytes32
               Source: "_username"
          Identifier _balance
             Type: uint256
             Source: "_balance"
  FunctionDefinition "setUsernameForAddress" - public
     Source: "function setUsernameForAddress(bytes32 _username, address _address) public onlyOwners {\r\n        usernameToAddress[_username] = _address;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(bytes32 _username, address _address)"
      VariableDeclaration "_username"
         Type: bytes32
         Source: "bytes32 _username"
        ElementaryTypeName bytes32
           Source: "bytes32"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        usernameToAddress[_username] = _address;\r\n    }"
      ExpressionStatement
         Gas costs: 20369
         Source: "usernameToAddress[_username] = _address"
        Assignment using operator =
           Type: address
           Source: "usernameToAddress[_username] = _address"
          IndexAccess
             Type: address
             Source: "usernameToAddress[_username]"
            Identifier usernameToAddress
               Type: mapping(bytes32 => address)
               Source: "usernameToAddress"
            Identifier _username
               Type: bytes32
               Source: "_username"
          Identifier _address
             Type: address
             Source: "_address"
  FunctionDefinition "setVerified" - public
     Source: "function setVerified(address _address) public onlyOwners {\r\n        users[_address].verified = true;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        users[_address].verified = true;\r\n    }"
      ExpressionStatement
         Gas costs: 20369
         Source: "users[_address].verified = true"
        Assignment using operator =
           Type: bool
           Source: "users[_address].verified = true"
          MemberAccess to member verified
             Type: bool
             Source: "users[_address].verified"
            IndexAccess
               Type: struct ExtendData.User storage ref
               Source: "users[_address]"
              Identifier users
                 Type: mapping(address => struct ExtendData.User storage ref)
                 Source: "users"
              Identifier _address
                 Type: address
                 Source: "_address"
          Literal, token: true value: true
             Type: bool
             Source: "true"
  FunctionDefinition "addTip" - public
     Source: "function addTip(address _from, bytes32 _to, uint _tip) public onlyOwners {\r\n        tips[_from][_to] += _tip;\r\n        balances[_to] += _tip;\r\n        lastTip[_from][_to] = now;     \r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _from, bytes32 _to, uint _tip)"
      VariableDeclaration "_from"
         Type: address
         Source: "address _from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_to"
         Type: bytes32
         Source: "bytes32 _to"
        ElementaryTypeName bytes32
           Source: "bytes32"
      VariableDeclaration "_tip"
         Type: uint256
         Source: "uint _tip"
        ElementaryTypeName uint
           Source: "uint"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        tips[_from][_to] += _tip;\r\n        balances[_to] += _tip;\r\n        lastTip[_from][_to] = now;     \r\n    }"
      ExpressionStatement
         Gas costs: 20425
         Source: "tips[_from][_to] += _tip"
        Assignment using operator +=
           Type: uint256
           Source: "tips[_from][_to] += _tip"
          IndexAccess
             Type: uint256
             Source: "tips[_from][_to]"
            IndexAccess
               Type: mapping(bytes32 => uint256)
               Source: "tips[_from]"
              Identifier tips
                 Type: mapping(address => mapping(bytes32 => uint256))
                 Source: "tips"
              Identifier _from
                 Type: address
                 Source: "_from"
            Identifier _to
               Type: bytes32
               Source: "_to"
          Identifier _tip
             Type: uint256
             Source: "_tip"
      ExpressionStatement
         Gas costs: 20329
         Source: "balances[_to] += _tip"
        Assignment using operator +=
           Type: uint256
           Source: "balances[_to] += _tip"
          IndexAccess
             Type: uint256
             Source: "balances[_to]"
            Identifier balances
               Type: mapping(bytes32 => uint256)
               Source: "balances"
            Identifier _to
               Type: bytes32
               Source: "_to"
          Identifier _tip
             Type: uint256
             Source: "_tip"
      ExpressionStatement
         Gas costs: 20199
         Source: "lastTip[_from][_to] = now"
        Assignment using operator =
           Type: uint256
           Source: "lastTip[_from][_to] = now"
          IndexAccess
             Type: uint256
             Source: "lastTip[_from][_to]"
            IndexAccess
               Type: mapping(bytes32 => uint256)
               Source: "lastTip[_from]"
              Identifier lastTip
                 Type: mapping(address => mapping(bytes32 => uint256))
                 Source: "lastTip"
              Identifier _from
                 Type: address
                 Source: "_from"
            Identifier _to
               Type: bytes32
               Source: "_to"
          Identifier now
             Type: uint256
             Source: "now"
  FunctionDefinition "addUser" - public
     Source: "function addUser(address _address, bytes32 _username) public onlyOwners {\r\n        users[_address] = User({\r\n                username: _username,\r\n                verified: false\r\n            });\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address, bytes32 _username)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_username"
         Type: bytes32
         Source: "bytes32 _username"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        users[_address] = User({\r\n                username: _username,\r\n                verified: false\r\n            });\r\n    }"
      ExpressionStatement
         Gas costs: 40504
         Source: "users[_address] = User({\r\n                username: _username,\r\n                verified: false\r\n            })"
        Assignment using operator =
           Type: struct ExtendData.User storage ref
           Source: "users[_address] = User({\r\n                username: _username,\r\n                verified: false\r\n            })"
          IndexAccess
             Type: struct ExtendData.User storage ref
             Source: "users[_address]"
            Identifier users
               Type: mapping(address => struct ExtendData.User storage ref)
               Source: "users"
            Identifier _address
               Type: address
               Source: "_address"
          FunctionCall
             Type: struct ExtendData.User memory
             Source: "User({\r\n                username: _username,\r\n                verified: false\r\n            })"
            Identifier User
               Type: type(struct ExtendData.User storage pointer)
               Source: "User"
            Identifier _username
               Type: bytes32
               Source: "_username"
            Literal, token: false value: false
               Type: bool
               Source: "false"
  FunctionDefinition "removeTip" - public
     Source: "function removeTip(address _from, bytes32 _to) public onlyOwners {\r\n        balances[_to] -= tips[_from][_to];\r\n        tips[_from][_to] = 0;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _from, bytes32 _to)"
      VariableDeclaration "_from"
         Type: address
         Source: "address _from"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "_to"
         Type: bytes32
         Source: "bytes32 _to"
        ElementaryTypeName bytes32
           Source: "bytes32"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        balances[_to] -= tips[_from][_to];\r\n        tips[_from][_to] = 0;\r\n    }"
      ExpressionStatement
         Gas costs: 20721
         Source: "balances[_to] -= tips[_from][_to]"
        Assignment using operator -=
           Type: uint256
           Source: "balances[_to] -= tips[_from][_to]"
          IndexAccess
             Type: uint256
             Source: "balances[_to]"
            Identifier balances
               Type: mapping(bytes32 => uint256)
               Source: "balances"
            Identifier _to
               Type: bytes32
               Source: "_to"
          IndexAccess
             Type: uint256
             Source: "tips[_from][_to]"
            IndexAccess
               Type: mapping(bytes32 => uint256)
               Source: "tips[_from]"
              Identifier tips
                 Type: mapping(address => mapping(bytes32 => uint256))
                 Source: "tips"
              Identifier _from
                 Type: address
                 Source: "_from"
            Identifier _to
               Type: bytes32
               Source: "_to"
      ExpressionStatement
         Gas costs: 5200
         Source: "tips[_from][_to] = 0"
        Assignment using operator =
           Type: uint256
           Source: "tips[_from][_to] = 0"
          IndexAccess
             Type: uint256
             Source: "tips[_from][_to]"
            IndexAccess
               Type: mapping(bytes32 => uint256)
               Source: "tips[_from]"
              Identifier tips
                 Type: mapping(address => mapping(bytes32 => uint256))
                 Source: "tips"
              Identifier _from
                 Type: address
                 Source: "_from"
            Identifier _to
               Type: bytes32
               Source: "_to"
          Literal, token: [no token] value: 0
             Type: int_const 0
             Source: "0"
  FunctionDefinition "addOwner" - public
     Source: "function addOwner(address _address) public onlyOwners {\r\n        owners[_address] = true;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        owners[_address] = true;\r\n    }"
      ExpressionStatement
         Gas costs: 20363
         Source: "owners[_address] = true"
        Assignment using operator =
           Type: bool
           Source: "owners[_address] = true"
          IndexAccess
             Type: bool
             Source: "owners[_address]"
            Identifier owners
               Type: mapping(address => bool)
               Source: "owners"
            Identifier _address
               Type: address
               Source: "_address"
          Literal, token: true value: true
             Type: bool
             Source: "true"
  FunctionDefinition "removeOwner" - public
     Source: "function removeOwner(address _address) public onlyOwners {\r\n        owners[_address] = false;\r\n    }"
    ParameterList
       Gas costs: 0
       Source: "(address _address)"
      VariableDeclaration "_address"
         Type: address
         Source: "address _address"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Gas costs: 0
       Source: ""
    ModifierInvocation "onlyOwners"
       Gas costs: 0
       Source: "onlyOwners"
      Identifier onlyOwners
         Type: modifier ()
         Source: "onlyOwners"
    Block
       Source: "{\r\n        owners[_address] = false;\r\n    }"
      ExpressionStatement
         Gas costs: 20363
         Source: "owners[_address] = false"
        Assignment using operator =
           Type: bool
           Source: "owners[_address] = false"
          IndexAccess
             Type: bool
             Source: "owners[_address]"
            Identifier owners
               Type: mapping(address => bool)
               Source: "owners"
            Identifier _address
               Type: address
               Source: "_address"
          Literal, token: false value: false
             Type: bool
             Source: "false"
